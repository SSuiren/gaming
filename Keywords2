
#include <iostream>

using namespace std;

#include <string>

#include <vector>

#include <algorithm>

#include <fstream>

#include <ctime>

#include <cctype>




int main()
{

constant int max_guess=5

	int usrname;
	int password;
	
	
	// Display Title of the program to the user
	system("CIA: Decripting Test.");

	// Ask the recruit to log in using their name
	cout << "login" << endl;
	cin >> usrname;
	cout << "password" << endl;
	cin >> password;
	
	// Hold the recruit's name in a var, and address them by it throughout the simulation.
	cout << "welcome " << usrname << endl;
	cout << endl;
	cout << endl;

	
	// Display an overview of what Keywords II is to the recruit 
	cout << "this program is meant to test whether you are able to decrpt codes and find the secret messages." << endl;
	cout << endl;	
	
	// Display directions to the recruit on how to use Keywords
	cout << " you will be given 10 sectret messages to decript, if you fail you'll be sent back to the beginning of training. you have 5 tries, good luck!" << endl;
 

	// Create a collection of 10 words you had written down manually
	vector<strings>words;
	words.pushback("bomb");
	words.pushback("spy");
	words.pushback("killer");
	words.pushback("hidout");
	words.pushback("government");
	words.pushback("disease");
	words.pushback("poison");
	words.pushback("harddrive");
	words.pushback("location");
	words.pushback("leader");
	
	// Create an int var to count the number of simulations being run starting at 1

	// Display the simulation # is starting to the recruit. 

	// Pick new 3 random words from your collection as the secret code word the recruit has to guess. 

 

	// While recruit hasn’t made too many incorrect guesses and hasn’t guessed the secret word

	//     Tell recruit how many incorrect guesses he or she has left

	//Show recruit the letters he or she has guessed

	//Show player how much of the secret word he or she has guessed

	//Get recruit's next guess

	//While recruit has entered a letter that he or she has already guessed

//          Get recruit ’s guess

//     Add the new guess to the group of used letters

//     If the guess is in the secret word

//          Tell the recruit the guess is correct

//          Update the word guessed so far with the new letter

//     Otherwise

//          Tell the recruit the guess is incorrect

//          Increment the number of incorrect guesses the recruit has made

// If the recruit has made too many incorrect guesses

//     Tell the recruit that he or she has failed the Keywords II course.

// Otherwise

//     Congratulate the recruit on guessing the secret words

// Ask the recruit if they would like to run the simulation again

// If the recruit wants to run the simulation again

//     Increment the number of simulations ran counter

//     Move program execution back up to // Display the simulation # is starting to the recruit. 

// Otherwise 

//     Display End of Simulations to the recruit

//     Pause the Simulation with press any key to continue
	
}
